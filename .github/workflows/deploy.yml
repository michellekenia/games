name: Deploy Games 

on: 
  push: 
    branches: [main]

jobs:
  build: 
    runs-on: [ubuntu-latest]
    steps: 
      - name: Checkout source 
        uses: actions/checkout@v4
      - name: Login no docker
        run: echo ${{secrets.DOCKER_PASS}} | docker login -u ${{secrets.DOCKER_USER}} --password-stdin
      - name: Build Docker image 
        run: |
          echo "Verificando espaço em disco..."
          df -h
          docker build -t mihkenia/games-deploy:latest .
      - name: Publicar a imagem da aplicação no docker hub 
        run: docker push mihkenia/games-deploy:latest

  deploy: 
    needs: build
    runs-on: [aws-ec2]
    steps: 
    - name: Criar network
      run: |
          if ! docker network ls | grep -q my-net; then
            docker network create my-net
          fi
    - name: Pull da imagem do postgres:16
      run: docker pull postgres:16
    - name: Criar/rodar o container do banco de dados      
      run: |
          if docker container inspect database-container &> /dev/null; then
            echo "O container já existe."
          else
            echo "O container não existe."   
            docker run -d --name database-container --network my-net -p 5432:5432 -e POSTGRES_DB=gamesdatabase -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres postgres:16
          fi
    - name: Pull da imagem da aplicação no dockerhub
      run: |
          echo "Verificando espaço em disco antes de puxar a imagem..."
          AVAILABLE_SPACE=$(df / | tail -1 | awk '{print $4}')
          MIN_REQUIRED_SPACE=5000000 # Espaço mínimo em KB (ajuste conforme necessário)

          if [ "$AVAILABLE_SPACE" -lt "$MIN_REQUIRED_SPACE" ]; then
            echo "Espaço insuficiente em disco. Disponível: $AVAILABLE_SPACE KB. Necessário: $MIN_REQUIRED_SPACE KB."
            exit 1
          fi

          for i in {1..3}; do
            if docker pull mihkenia/games-deploy:latest; then
              echo "Imagem puxada com sucesso!"
              break
            else
              echo "Falha ao puxar a imagem. Tentativa $i de 3."
              if [ $i -eq 3 ]; then
                echo "Todas as tentativas falharam. Abortando."
                exit 1
              fi
              sleep 5 # Espera 5 segundos antes de tentar novamente
            fi
          done
    - name: Deletar container do app existente
      run: |
          if docker container inspect app-container &> /dev/null; then
            docker rm -f app-container
          else
            echo "O container app-container não existe."
          fi
    - name: Criar/rodar o container da aplicação
      run: docker run -d -p 3000:3000 --name app-container --network my-net -e DB_URL="postgresql://postgres:postgres@database-container:5432/gamesdatabase?schema=public" mihkenia/games-deploy:latest sh -c "npm run migration:run && npm run start"
    

      
